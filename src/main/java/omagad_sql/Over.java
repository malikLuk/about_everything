/**
 *
 *                                         С Хабра. Как посчитать все одним запросом.
 *                                                 Оконные функции PostgreSQL.
 * Оконные функции не изменяют выборку, а только добавляют некоторую доп информацию о ней. То есть, для простоты понимания
 * можно считать, что postgres сначала выполняет весь запрос(кроме сортировки и limit), а только потом просчитывает
 * оконные выражения. Синтаксис примерно такой:
 *  функция OVER окно
 * Окно - это некоторое выражение, описывающее набор строк, которые будет обрабатывать функция и порядок этой обработки.
 * Причем окно может быть задано просто пустыми скобками (), то есть окном будут все строки результата запроса. Смотреть
 * рисунок over_1.png. В оконное выражение можно добавить ORDER BY, смотреть рис over_2.png. Дальше - больше. В оконное
 * выражение можно добавить слово PARTITION BY[expression], например row_number() OVER (PARTITION BY section), тогда
 * подсчет будет идти в каждой группе отдельно. Смотреть рис. over_3.png. Если не указывать партицию, то партицией является
 * весь запрос.
 * В качестве функций можно использовать как оконные функции из мануала, такие как row_number(), rank(), lead() и т.д.,
 * а можно использовать и функции агрегаты, такие как sum(), count() и т.д. Агрегатные функции работают слегка по-другому:
 * если не задан ORDER BY в окне, идет подсчет по всей партиции один раз, и результат пишется во все строки(одинаков для
 * всех строк пратиции). Если же ORDER BY задан, то подсчет в каждой строке идет от начала партиции до этой строки.
 * Посмотрим на примере. У нас есть таблица пополнений балансов(см. рис. over_4.png), и мы хотим узнать, как менялся
 * остаток на балансе(см рис over_5.png).
 *
 * */

package omagad_sql;

public class Over {
}
