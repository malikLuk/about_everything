/**
 *
 * Смартфокс запускает все Экстеншены в многопточной среде. Есть два основных пула потоков, которые работают с Экстеншенами: Экстеншен
 * Контроллер (ExtensionController) и Системный Контроллер (SystemController). Экстеншен контроллер отвечает за обработку клиентских
 * запросов, а Системный контроллер отправляет системные события, такие как LOGIN, USER_DISCONNECT etc. Короче надо следить за
 * разделяемым состоянием Экстеншенов. Рекомендуются многопоточные коллекции. На sm_concurrent.png видно, как оба контроллера стартуют
 * отдельные пулы потоков, которые совместно вызывают обработчики запросов и событий в Экстеншенах. SFSApi потокобезопасный класс,
 * то есть, работа через его методы должны быть потокобезопасной. Есть исключения - это классы SFSObject и SFSArray - они не потокобезпоасны.
 *
 * Автобалансировка нагрузки. Если коротко, смартфокс сам это делает, нифига не сконфигурировать.
 *
 * Тюнинг пулов потоков. Это можно сделать в AdminTool -> Server Configuration, вот какие там настройки:
 *  * Core threads - количество потоков на старте смартфокса.
 *  * Backup threads - количество потоков добавляемых при запуске резервного копирования.
 *  * Maximum backups - максимальное количество операций резервного копирования потоков.
 *  * Queue size triggering a backup - размер очереди, в которую будут добавляться пакеты потоков резервного копирования.
 *  * Backup triggering time - количество секунд, по истечении которыъ вызывается резервное копирование, если триггер размера очереди
 *      все еще активен.
 *  * Backup threads expiration - количество секунд, по истечении которых резервные потоки удаляются, если размер очереди меньше
 *      следующего значения.
 *  * Queue size preventing backup expiration - размер очереди, позволяющий удалять резервные потоки.
 *  * Log activity - писать ли логи когда пул потоков меняет размер.
 *  * Full queue warning interval - сколько секунд между сообщениями о переполнении очереди сообщений.
 *  * Controller Request queue size - максимальный размер очереди контроллера.
 *  * Prestart core threads - сразу запускает все основные потоки, а не добавляет их при необходимости.
 * Заметка, лучше это вообще не трогать без веской причины. По дефолту итак все нормально настроено.
 *
 * Архитектура класслоадера. Мы помним, что у каждого Экстеншена свой класслоадер - это нужно для хот-редеплоя (sm_classloader.png).
 * На рисунке видно, что каждый Экстеншен видит свои задеплоеные классы в своем класслоадере, он также может получить доступ к классам,
 * загруженным через Системный Класслоадер и к классам, загруженным через глобальный класслоадер для всех Экстеншенов, который еще и
 * грузит классы из __lib__. Когда происходит редеплой Экстеншена, перезагружается только класслоадер конкретно этого Экстеншена,
 * остальные даже не замечают этого. Ввиду вышесказанного, если у нас например есть три Комнатных Экстеншена и они должны взаимодействовать
 * с каким-то классом, который должен быть един для всех, лучше положить его в директорию __lib__, которая общая для всех Экстеншенов.
 * Это избавит нас от редеплоя всех Экстеншенов, связанных с этим класоом. Также следует поступать и с синглтонами.
 *
 * Планировщик. http://docs2x.smartfoxserver.com/ExtensionsJava/advanced-concepts
 *
 * */

package smartfox.java_extensions;

public class AdvConcepts_03 {
}
