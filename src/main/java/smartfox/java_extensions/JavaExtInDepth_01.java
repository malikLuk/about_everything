/**
 *
 * Обзор деплоя. Экстеншены деплоятся в .jar файлы в папки с соответствующим именем в директории extensions (sm_ext_folder.png). Нужно отметить
 * некоторые вещи:
 *  - мы можем деплоить несколько джарников в одной папке Экстеншена, например зависимости или другие библиотеки. Они все вместе будут загружены
 *      одним класс лоадером.
 *  - существует специальная директория __lib__ (тоже видно на sm_ext_folder.png), куда мы также можем поместить зависимости. Таким образом мы
 *      можем решить, какие зависимости будут расшарены между разными Экстеншенами, а какие будут локлаьными для каждого конкретного.
 * Оба подхода могут быть полезны в зависимости от того, что нам нужно:
 *  - либы, задеплоеные в папке конкретного Экстеншена будут загружены класс лоадером Экстеншена. Это значит, что мы можем менять эти конкретные
 *      либы и никак не заденем другие Экстеншены.
 *  - либы из общей директории __lib__ загружаются через другой класс лоадер. Соответственно, если мы что-то с ними сделаем, это затронет все
 *      Экстеншены, которые их юзают. Зато мы сэкономим ресурсы сервера.
 * Экстеншены автоматически загружают .properties файл. По дефолту сервер пытается найти файл с именем config.properties, но мы можем дать и
 * другое имя. Разные имена могут быть полезны, когда мы подключаем один Экстеншен к разным Зонам и для каждой требуются свои пропертис. На
 * sm_ext_config.png видна конфигурация Экстеншена в админке, где:
 *  - Name ссылается на имя папки Экстеншена
 *  - Type тип Экстеншена (у нас Java)
 *  - Main class - класс, унаследованный от ISFSExtension и реализующий метод init()
 *  - Use naming convention - не настройка Экстеншенов, просто включает/выключает фильтр, отображающий только те классы, имя которых
 *      заканчивается на Extension
 *  - Properties file - опциональный, указывает на имя конфигурационного файла. Если не указано, то это config.properties
 *  - Reload mode показывает, будут ли мониториться изменения Экстеншенов и будет ли автоматическая перезагрузка обновленных Экстеншенов.
 *      Бывает AUTO, MANUAL и NONE.
 * Смартфокс позволяет производить хот-редеплой. Когда он включен, сервер сам перезагружает измененные Экстеншены. Как настроить логи Экстеншенов
 * смотреть тут https://smartfoxserver.com/blog/custom-logging-for-sfs2x-extensions/
 *
 * */

package smartfox.java_extensions;

public class JavaExtInDepth_01 {
}
